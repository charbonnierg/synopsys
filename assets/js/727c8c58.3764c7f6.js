"use strict";(self.webpackChunksynopsys_documentation=self.webpackChunksynopsys_documentation||[]).push([[6848],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>b});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(a),m=r,b=d["".concat(o,".").concat(m)]||d[m]||p[m]||s;return a?n.createElement(b,i(i({ref:t},c),{},{components:a})):n.createElement(b,i({ref:t},c))}));function b(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,i=new Array(s);i[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var u=2;u<s;u++)i[u]=a[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const s={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(s.tabItem,i),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>N});var n=a(7462),r=a(7294),s=a(6010),i=a(2466),l=a(6550),o=a(1980),u=a(7392),c=a(12);function d(e){return function(e){return r.Children.map(e,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function p(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function m(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function b(e){let{queryString:t=!1,groupId:a}=e;const n=(0,l.k6)(),s=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,o._X)(s),(0,r.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})}),[s,n])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,s=p(e),[i,l]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[o,u]=b({queryString:a,groupId:n}),[d,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,s]=(0,c.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&s.set(e)}),[a,s])]}({groupId:n}),f=(()=>{const e=o??d;return m({value:e,tabValues:s})?e:null})();(0,r.useLayoutEffect)((()=>{f&&l(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),h(e)}),[u,h,s]),tabValues:s}}var f=a(2389);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:a,selectedValue:l,selectValue:o,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,a=c.indexOf(t),n=u[a].value;n!==l&&(d(t),o(n))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,s.Z)("tabs__item",g.tabItem,i?.className,{"tabs__item--active":l===t})}),a??t)})))}function k(e){let{lazy:t,children:a,selectedValue:n}=e;if(a=Array.isArray(a)?a:[a],t){const e=a.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},a.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function v(e){const t=h(e);return r.createElement("div",{className:(0,s.Z)("tabs-container",g.tabList)},r.createElement(y,(0,n.Z)({},e,t)),r.createElement(k,(0,n.Z)({},e,t)))}function N(e){const t=(0,f.Z)();return r.createElement(v,(0,n.Z)({key:String(t)},e))}},9930:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>b,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var n=a(7462),r=(a(7294),a(3905)),s=a(4866),i=a(5162);const l={sidebar_position:2,description:"Listen to channel messages and react"},o="Subscribers",u={unversionedId:"tutorials/basics/create-subscriber",id:"tutorials/basics/create-subscriber",title:"Subscribers",description:"Listen to channel messages and react",source:"@site/docs/tutorials/basics/create-subscriber.mdx",sourceDirName:"tutorials/basics",slug:"/tutorials/basics/create-subscriber",permalink:"/synopsys/docs/tutorials/basics/create-subscriber",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorials/basics/create-subscriber.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"Listen to channel messages and react"},sidebar:"tutorialSidebar",previous:{title:"Bus",permalink:"/synopsys/docs/tutorials/basics/create-bus"},next:{title:"Services",permalink:"/synopsys/docs/tutorials/basics/create-service"}},c={},d=[{value:"Definition",id:"definition",level:2},{value:"Fields",id:"fields",level:3},{value:"Create a subscriber",id:"create-a-subscriber",level:2},{value:"Define a handler",id:"define-a-handler",level:3},{value:"Create subscriber",id:"create-subscriber",level:3},{value:"Standalone usage",id:"standalone-usage",level:3},{value:"Dynamic subscribers",id:"dynamic-subscribers",level:3}],p={toc:d},m="wrapper";function b(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"subscribers"},"Subscribers"),(0,r.kt)("p",null,"Now that we have defined a ",(0,r.kt)("a",{parentName:"p",href:"/synopsys/docs/tutorials/basics/create-channel"},(0,r.kt)("strong",{parentName:"a"},"channel")),", let's add a subscriber into our application in order to process published messages."),(0,r.kt)("h2",{id:"definition"},"Definition"),(0,r.kt)("admonition",{title:"What is a subscriber ?",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"A subscriber is a component that listens for messages on a particual channel and react to it.")),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"A subscriber can be used to received messages with ",(0,r.kt)("strong",{parentName:"p"},"at most once")," delivery. It does not guarantee that no messages are lost or than messages are processed in order. If ",(0,r.kt)("strong",{parentName:"p"},"at least once")," or ",(0,r.kt)("strong",{parentName:"p"},"exactly once")," delivery is required, use ",(0,r.kt)("a",{parentName:"p",href:"/synopsys/docs/tutorials/basics/create-consumer"},"consumers")," instead."),(0,r.kt)("blockquote",{parentName:"admonition"},(0,r.kt)("p",{parentName:"blockquote"},"Even though ",(0,r.kt)("strong",{parentName:"p"},"at most delivery")," may lead to message losses, it is still useful in various scenarios. For example, when only most up-to-date data is used, and data is updated frequently, ",(0,r.kt)("em",{parentName:"p"},"at most once delivery")," is a good solution."))),(0,r.kt)("h3",{id:"fields"},"Fields"),(0,r.kt)("p",null,"A subscriber defines the following fields:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Optional"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Name"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the subscriber. In practice, this is the name of an ",(0,r.kt)("strong",{parentName:"td"},"operation"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83e\udde8"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83e\udde8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Channel"),(0,r.kt)("td",{parentName:"tr",align:null},"The channel delivering messages to subscribers."),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83e\udde8"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83e\udde8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Handler"),(0,r.kt)("td",{parentName:"tr",align:null},"A function to execute each time a message is received. In python, handlers must be coroutine functions returning ",(0,r.kt)("inlineCode",{parentName:"td"},"None"),"."),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83e\udde8"),(0,r.kt)("td",{parentName:"tr",align:null},"\ud83e\udde8")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Queue"),(0,r.kt)("td",{parentName:"tr",align:null},"When several subscribers are started on the same channel, each message is delivered to a single subscriber within each queue. When no queue is specified, subscriber receives all messages."),(0,r.kt)("td",{parentName:"tr",align:null},"\u2705"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"null"))))),(0,r.kt)("h2",{id:"create-a-subscriber"},"Create a subscriber"),(0,r.kt)("admonition",{title:"Recap",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"Channel has been defined using the following python code:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},'MEASURES = create_channel(\n    name="measures",\n    address="locations/{location}/devices/{device_id}/sensors/{sensor_id}/measure",\n    parameters=MeasureParameters,\n    schema=MeasureData,\n)\n'))),(0,r.kt)("h3",{id:"define-a-handler"},"Define a handler"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"python",label:"Python SDK",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# highlight-next-line\nfrom synopsys import Message\n# highlight-next-line\nfrom .definitions import MeasureData, MeasureParameters\n\n\n# highlight-next-line\nasync def handler(msg: Message[MeasureData, MeasureParameters]) -> None:\n    """Process messages delivered to subscriber."""\n    params = msg.parameters\n    measurement = msg.data\n    print(f"[{params.location}] - Device {params.device_id} - Sensor {params.sensor_id}: {measurement.value}")\n')),(0,r.kt)("admonition",{title:"Handler signature",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"A python subscriber handler must accept a ",(0,r.kt)("inlineCode",{parentName:"p"},"Message[DataT, ParamsT]")," as arguments, where ",(0,r.kt)("inlineCode",{parentName:"p"},"DataT")," is the payload schema of susbcriber channel, and ",(0,r.kt)("inlineCode",{parentName:"p"},"ParamsT")," is the parameters schema of subscriber channel."),(0,r.kt)("p",{parentName:"admonition"},"If subscriber requires dependencies, such as a database connection, or an HTTP client, handlers can be created as callable classes:"),(0,r.kt)("pre",{parentName:"admonition"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},'class SomeDatabaseClient:\n    """A fake database client."""\n    pass\n\n\nclass HandlerWithDependencies:\n    def __init__(self, database: SomeDatabaseClient) -> None:\n        """Create a new handler."""\n        self.db = database\n\n    async def __call__(self, msg: Message[MeasureData, MeasureParameters]) -> None:\n        """Execute handler, which relies on a database connection."""\n        # Do something with the message and the database\n        # await self.db.update(...)\n'))))),(0,r.kt)("h3",{id:"create-subscriber"},"Create subscriber"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"python",label:"Python SDK",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'# highlight-next-line\nfrom synopsys import Subscriber\nfrom .channels import MEASUREMENTS\n\n\nMEASUREMENTS_PROCESSOR = Subscriber(\n    name="process-measurements",\n    channel=MEASUREMENTS,\n    handler=handler,\n)\n')))),(0,r.kt)("h3",{id:"standalone-usage"},"Standalone usage"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"python",label:"Python SDK",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from synopsys import create_bus\nfrom .actors import MEASUREMENTS_PROCESSOR\n\n\nasync def main() -> None:\n    async with create_bus("nats://localhost:4222") as bus:\n        # highlight-next-line\n        await bus.register_subscriber(MEASUREMENTS_PROCESSOR)\n\n\nif __name__ == "__main__":\n   # Run the main function and block until shutdown\n   import anyio\n   anyio.run(main)\n')))),(0,r.kt)("p",null,"The function above will run until bus or channel is closed. When using PubSub backend with support for automatic reconnections (such as NATS), the function above runs ",(0,r.kt)("em",{parentName:"p"},"forever")," (I.E, until external cancellation or failure)."),(0,r.kt)("h3",{id:"dynamic-subscribers"},"Dynamic subscribers"),(0,r.kt)(s.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"python",label:"Python SDK",default:!0,mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from synopsys import create_bus\nfrom .actors import MEASUREMENTS_PROCESSOR\n\n\nasync def main() -> None:\n    async with create_bus("nats://localhost:4222") as bus:\n        # Register subscriber when needed\n        # highlight-next-line\n        subscriber = await bus.register_subscriber(MEASUREMENTS_PROCESSOR)\n        # Stop suscriber when needed\n        # highlight-next-line\n        await subscriber.stop()\n\n\nif __name__ == "__main__":\n   # Run the main function and block until shutdown\n   import anyio\n   anyio.run(main)\n')))))}b.isMDXComponent=!0}}]);